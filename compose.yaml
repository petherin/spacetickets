services:
  spacetickets-api:
    container_name: spacetickets-api
    image: petherin/spacetickets:latest
    environment:
      - API_PORT=8080
      - SWAGGER_PORT=8081
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=example
      - DB_HOST=spacetickets-db
      - DB_MAX_OPEN_CONNS=10
      - DB_MAX_IDLE_CONNS=5
      - DB_CONN_RETRIES=3
      - DB_CONN_RETRY_INTERVAL_SECS=2
      - DB_CONN_MAX_LIFETIME_SECS=1800
      - HTTP_TIMEOUT_SECS=5
      - MAX_IDLE_CONNS=1
      - MAX_CONNS_PER_HOST=1
      - IDLE_CONN_TIMEOUT_SECS=10
      - DIALER_TIMEOUT_SECS=3
      - DIALER_KEEP_ALIVE_SECS=0
      - TLS_HANDSHAKE_TIMEOUT_SECS=2
      - DISABLE_KEEP_ALIVES=true
    ports:
      - 8080:8080
    networks:
      - spacetickets-network
    security_opt:
      - seccomp:unconfined

  db:
   image: postgres:17.0-alpine3.20
   container_name: spacetickets-db
   restart: always
   user: postgres
   secrets:
     - db-password
   volumes:
     - db-data:/var/lib/postgresql/data
     - ./internal/infrastructure/database/database_structure.sql:/docker-entrypoint-initdb.d/database_structure.sql
   environment:
     - POSTGRES_DB=example
     - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
   ports:
     - 5432:5432
   networks:
     - spacetickets-network
   healthcheck:
     test: [ "CMD", "pg_isready" ]
     interval: 10s
     timeout: 5s
     retries: 5

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: spacetickets-swagger
    ports:
      - "8081:8080"
    environment:
      - SWAGGER_JSON=/api/swagger.yaml
    volumes:
      - ./swagger.yaml:/api/swagger.yaml
    networks:
     - spacetickets-network

volumes:
  db-data:  
secrets:
  db-password:
    file: internal/infrastructure/database/password.txt
networks:
  spacetickets-network:
    name: spacetickets-network